<?php
/**
 * Copyright (c) 2012-2021 David J Bullock
 * Web Power and Light
 */

 if (class_exists('m4ac_c6rqypiacz4') ) { add_action('plugins_loaded', 'initMemberiumPathProtect', 999); 
function initMemberiumPathProtect() { global $memberiumPathProtect; $memberiumPathProtect = new MemberiumPathProtect; } final 
class MemberiumPathProtect { private $settings; 
function __construct() { global $pagenow; $this->settings = get_option('MemberiumPathProtect'); if (is_admin() ) { add_action('init', [$this, 'm4ac_bf4tkocs8'], 9); return; } else { if (in_array($pagenow, ['wp-login.php', 'wp-register.php']) ) {  } if (! empty($this->settings['active']) ) {; $this->m4ac_d6dnx5t_2e4a();  } } } 
function showPluginMenu() { if (current_user_can('manage_options') ) { add_options_page(__('Memberium Path Protect'), __('Memberium Path Protect'), 'manage_options', 'memberium-pathprotect', [$this, 'showAdminScreen']); } } 
function showAdminScreen() { if (! current_user_can('manage_options') ) { wp_die(__('You do not have sufficient permissions to access this page.') ); } if ($_SERVER['REQUEST_METHOD'] == 'POST') { if (! empty($_POST['update']) ) { $this->settings['active'] = (int) $_POST['active']; $this->settings['rules'] = []; if (isset($_POST['rules']) ) { foreach($_POST['rules'] as $rule) { $rule['urls'] = trim($rule['urls']); if ($rule['anonymous_only']) { $rule['logged_in'] = 0; } if (! $rule['anonymous_only'] && ! $rule['logged_in']) { $rule['logged_in'] = 1; } if ($rule['prohibited_action'] == 'redirect' && empty($rule['redirect_url']) ) { $rule['redirect_url'] = get_site_url(); } if (! empty($rule['urls']) && $rule['delete'] == 0) { $this->settings['rules'][] = $rule; } } } } if (! empty($_POST['add']) ) { $this->settings['rules'][] = []; } update_option('MemberiumPathProtect', $this->settings); } $option_list = []; $option_list['hide'] = 'Hide Completely'; $option_list['redirect'] = 'Redirect'; $this->settings['active'] = isset($this->settings['active']) ? $this->settings['active'] : 0; echo '<style>'; echo 'label { width:200px; display:inline-block; }'; echo '#htmlmessage { width:500px !important; }'; echo '</style>'; echo '<div class="wrap">'; echo '<h1>Memberium Path Protect</h1>'; echo '<form method="POST" action="">'; echo '<ul>'; echo '<li><label>Active</label>'; echo '<label style="width:75px;">'; echo '<input type="hidden" value="0" name="active" />'; echo '<input type="checkbox" value="1" class="ios-switch" name="active"', $this->settings['active'] == 1 ? ' checked="checked" ' : '', ' /><div class="switch"></div></label>';  echo '</li>'; echo '</ul>'; echo '<h3>Current Rules</h3>'; echo '<div style="width:800px;">'; echo '<hr />'; echo '<table class="widefat" style="white-space:nowrap;">'; echo '<tr style="font-weight:bold;">'; echo '<th>Requirements</th>'; echo '<th>URLs</th>'; echo '<th>Prohibited Action</th>'; echo '<th>Delete?</th>'; echo '</tr>'; if (count($this->settings['rules']) ) { foreach ( (array) $this->settings['rules'] as $key => $rule) { $rule['logged_in'] = isset($rule['logged_in']) ? $rule['logged_in'] : 0; $rule['anonymous_only'] = isset($rule['anonymous_only']) ? $rule['anonymous_only'] : 0; $rule['urls'] = isset($rule['urls']) ? $rule['urls'] : ''; $rule['redirect_url'] = isset($rule['redirect_url']) ? $rule['redirect_url'] : ''; echo '<tr>'; echo '<td>'; echo '<input type="hidden" name="rules[', $key, '][logged_in]" value="0">'; echo '<input type="checkbox" value="1" name="rules[', $key, '][logged_in]"', $rule['logged_in'] == 1 ? ' checked="checked" ' : '', ' /> Logged In<br>'; echo '<input type="hidden" name="rules[', $key, '][anonymous_only]" value="0">'; echo '<input type="checkbox" value="1" name="rules[', $key, '][anonymous_only]"', $rule['anonymous_only'] == 1 ? ' checked="checked" ' : '', ' /> Anonymous Only<br>'; echo '</td>'; $line_count = count(explode("\n", $rule['urls']) ); echo '<td>'; echo '<textarea cols="80" rows="', $line_count + 1, '" name="rules[', $key, '][urls]">', $rule['urls'], '</textarea>'; echo '</td>'; echo '<td>'; echo '<select name="rules[', $key, '][prohibited_action]">'; if (is_array($option_list) ) { foreach ($option_list as $value => $label) { $rule['prohibited_action'] = isset($rule['prohibited_action']) ? $rule['prohibited_action'] : ''; $selected = $rule['prohibited_action'] == $value ? ' selected="selected" ' : ''; echo '<option value="' . $value . '" ' . $selected . '>' . $label . '</option>'; } } echo '</select><br />'; echo 'Redirection URL<br>'; echo '<input type="text" name="rules[', $key, '][redirect_url]" value="', $rule['redirect_url'],'">'; echo '</td>'; echo '<td>'; echo '<input type="hidden" name="rules[', $key, '][delete]" value="0">'; echo '<input type="checkbox" name="rules[', $key, '][delete]" value="1">'; echo '</td>'; echo '</tr>'; } } else { echo '<tr><td colspan="99">You have no rules created</td></tr>'; } echo '</table>'; echo '&nbsp;<br>'; echo '<input type="submit" name="update" value="Save Changes" class="button-primary" />'; echo '</form>'; echo '<form method="post">'; echo '&nbsp;<br>'; echo '<input type="submit" name="add" value="Add Ruleset" class="button-primary" />'; echo '</form>'; echo '</div>'; echo '</div>'; return; } 
function m4ac_d6dnx5t_2e4a() { $current_url = $_SERVER['REQUEST_URI']; $action = ''; $redirect_url = get_site_url(); foreach ($this->settings['rules'] as $rule) { $rule['urls'] = isset($rule['urls']) ? $rule['urls'] : ''; $urls = array_filter(array_map('trim', explode("\n", $rule['urls']) )); if (! empty($urls) ) { foreach($urls as $url) { if (strpos($current_url, $url) === 0) { $viewable = true; if ($rule['logged_in'] == 1 && function_exists('is_user_logged_in') && ! is_user_logged_in() ) { $viewable = false; } if ($rule['anonymous_only'] == 1 && function_exists('is_user_logged_in') && is_user_logged_in() ) { $viewable = false; } if (! $viewable) { $action = $rule['prohibited_action']; $redirect_url = $rule['redirect_url']; break; } } } } } if ($action == 'hide') { include(get_query_template('404') ); exit; } elseif ($action == 'redirect') { nocache_headers(); wp_redirect($redirect_url, 302, 'Memberium ' . __FUNCTION__ . '::' . __LINE__); exit; }  } 
function m4ac_bf4tkocs8() { if (current_user_can('manage_options') ) { add_action('admin_menu', [$this, 'showPluginMenu']); } } } }
